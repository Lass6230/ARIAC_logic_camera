# Trial Name: demo.yaml
# ARIAC2023
# 2023-03-01 20:31:45

# ENVIRONMENT SETUP
time_limit: -1 # options: -1 (no time limit) or number of seconds

kitting_trays: # Which kitting trays will be spawned
  tray_ids: [6, 4]
  slots: [2, 5]

parts:
  agvs:
    agv1:
      tray_id: 5
      parts:
      - type: 'pump'
        color: 'purple'
        quadrant: 2
        rotation: pi/2
      - type: 'battery'
        color: 'blue'
        quadrant: 3
        rotation: pi/4
    agv3:
      tray_id: 7
      parts:
      - type: 'regulator'
        color: 'red'
        quadrant: 4
        rotation: 0.9

  bins: # bin params - 8 total bins each bin has nine total slots (1-9)
    bin1:
      - type: 'sensor'
        color: 'green'
        slots: [1,6,9]
        rotation: pi/4
        flipped: true
    bin7:
      - type: 'regulator'
        color: 'orange'
        slots: [1,4,6,7,9]

  conveyor_belt: #population params for conveyor belt
    active: true
    spawn_rate: 10 # seconds between spawn
    order: sequential # random or sequential
    parts_to_spawn:
      - type: 'pump'
        color: 'green'
        number: 10
        offset: -0.30 # between -1 and 1
        rotation: pi/5

# ORDER SETUP
orders:
  - id: 'W7NP0VD6'
    type: 'kitting'
    announcement:
      time_condition: 10.0
    priority: false
    kitting_task:
      agv_number: 3
      tray_id: 6
      destination: 'assembly_back'
      products:
        - type: 'pump'
          color: 'purple'
          quadrant: 3
  - id: '6RXHQYY2'
    type: 'assembly'
    announcement:
      submission_condition:
        order_id: 'W7NP0VD6'
    priority: false
    assembly_task:
      agv_number: [4]
      station: 'as3'
      products:
        - type: 'regulator'
          color: 'red'
          assembled_pose: # relative to briefcase frame
            xyz: [0.175, -0.223, 0.215]
            rpy: ['pi/2', 0, '-pi/2']
          assembly_direction: [0, 0, -1]

# GLOBAL CHALLENGES
challenges:
  - robot_malfunction:
      duration: 10.0
      robots_to_disable: ['floor_robot']
      part_type: 'regulator'
      part_color: 'red'
      agv: 3
  - faulty_part:
      order_id: '6RXHQYY2'
      quadrant: [1, 3]
  - dropped_part:
      robot: 'floor_robot'
      type: 'regulator'
      color: 'orange'
      drop_after_num: 15 # first part the robot successfully picks
      drop_after_time: 30.0 # secons
  - sensor_blackout:
    duration: 0.0
    sensors_to_disable: [break_beam, laser_profiler, logical_camera]
      order_id: '6RXHQYY2'
  - human:
      behavior 'helpful'
      time: 15.0
